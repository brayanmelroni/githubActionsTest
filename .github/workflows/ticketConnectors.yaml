name: ConnectorDeploymentWorkflow
env:
  environment: dev
  CONNECT_URL: http://localhost:8083
  BASE_URL: http://localhost:8083
  USERNAME: test
  PASSWORD: test
on:
  push:
    paths:
    - 'connectors/**'
  pull_request:
    paths:
    - 'connectors/**'
jobs:
  build:
    runs-on: ubuntu-latest
    services:
          app:
            image: landoop/fast-data-dev
            env:
              ADV_HOST: 127.0.0.1         
              RUNTESTS: 0                 # Disable Running tests so the cluster starts faster
              FORWARDLOGS: 0              # Disable running 5 file source connectors that bring application logs into Kafka topics
              SAMPLEDATA: 0  
            ports:
              - 3001:3000 # 3000 in the container is mapped to 3001 in local host
              - 2181:2181                 # Zookeeper
              - 3030:3030                 # Landoop UI
              - 8081-8083:8081-8083       # REST Proxy, Schema Registry, Kafka Connect ports
              - 9581-9585:9581-9585       # JMX Ports
              - 9092:9092                 # Kafka Broker
    steps:
      - name: sleep
        run: |
          sleep 180
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: tj-actions/changed-files@v36
        id: changed-files
        with:
          include_all_old_new_renamed_files: true
      - name: Create / Update connectors
        run: |
          added_modified_files="${{ steps.changed-files.outputs.added_files }} ${{ steps.changed-files.outputs.modified_files }}"
          for file in $added_modified_files; do
            if  [[ $file == connectors* ]] && [[ $file == *.json ]] ;
            then
              CONNECTOR_NAME=`echo $file | rev |  cut -d/ -f1 | rev | cut -d. -f1`
              URL=`echo ${BASE_URL}/connectors/${CONNECTOR_NAME}/config`
              response=$(curl --write-out '%{http_code}' --silent --output /dev/null -u $USERNAME:$PASSWORD -i -X PUT -H  "Content-Type:application/json" $URL -d `jq -c . < $file`)
              echo $response 
              if [ $response == 201 ]
              then
                echo "Created: $CONNECTOR_NAME"
              fi
              if [ $response == 200 ]
              then
                echo "Updated: $CONNECTOR_NAME"
              fi
            fi
          done
      - name: Delete connectors
        run: |
          for file in ${{ steps.changed-files.outputs.deleted_files }}; do
            if  [[ $file == connectors* ]] && [[ $file == *.json ]] ;
            then
              CONNECTOR_NAME=`echo $file | rev |  cut -d/ -f1 | rev | cut -d. -f1`
              DELETE_URL=`echo ${BASE_URL}/connectors/${CONNECTOR_NAME}`
              echo $DELETE_URL
              curl -s -X DELETE $DELETE_URL
            fi
          done
      - name: Delete old connector and Create new connector(file renamed)
        run: |
          for file in ${{ steps.changed-files.outputs.all_old_new_renamed_files }}; do
            if  [[ $file == connectors* ]] && [[ $file == *.json ]] ;
            then
              IFS=',' read -r -a array <<< "$file"
              OLD_CONNECTOR_NAME=`echo ${array[0]} | rev |  cut -d/ -f1 | rev | cut -d. -f1`
              DELETE_URL=`echo ${BASE_URL}/connectors/${OLD_CONNECTOR_NAME}`
              # echo $DELETE_URL
              # curl -s -X DELETE $DELETE_URL
              
              NEW_CONNECTOR_NAME=`echo ${array[1]} | rev |  cut -d/ -f1 | rev | cut -d. -f1`
              CREATE_URL=`echo ${BASE_URL}/connectors/${NEW_CONNECTOR_NAME}/config`
              # echo $CREATE_URL
              # curl -u $USERNAME:$PASSWORD -i -X PUT -H  "Content-Type:application/json" $CREATE_URL -d `jq -c . < ${array[1]}`
            fi
          done
   
    